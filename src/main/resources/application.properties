spring.application.name=meetstudy
server.port=8080
# console style
spring.output.ansi.enabled=always
# DB
spring.datasource.url=jdbc:mysql://localhost:3306/mydatabase
spring.datasource.username=dbuser
spring.datasource.password=dbpassword
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
#spring.jpa.database-platform=org.hibernates.dialect.MySQL5InnoDBDialect
# JPA
spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.show_sql=true
spring.jpa.properties.hibernate.format_sql=true
# Swagger
springdoc.version=@project.version@
springdoc.api-docs.path=/api-docs
springdoc.default-consumes-media-type=application/json
springdoc.default-produces-media-type=application/json
springdoc.swagger-ui.operations-sorter=alpha
springdoc.swagger-ui.tags-sorter=alpha
springdoc.swagger-ui.path=/swagger-ui.html
springdoc.swagger-ui.disable-swagger-default-url=true
springdoc.swagger-ui.display-query-params-without-oauth2=true
springdoc.swagger-ui.doc-expansion=none
springdoc.paths-to-match[0]=/api/**
# JWT
spring.jwt.header=Authorization
spring.jwt.secret=jwtsecretkey
spring.jwt.accessTokenValidityInSeconds=999999999999
# CORS Configuration
# 허용할 Origin 설정
cors.allowed.origins=http://localhost:3000
# 요청 허용 메서드 설정
cors.allowed.methods=GET,POST,PUT,DELETE,PATCH
# 요청 허용 헤더 설정
cors.allowed.headers=*
# 응답 헤더 설정
cors.exposed.headers=*
# 요청 허용 여부 설정
cors.allowed.credentials=true
# 미리 설정된 간단한 URL 패턴을 통한 CORS 구성
cors.mapping=/api/**
secret.key=secretkey
#email ??
spring.data.redis.host=localhost
spring.data.redis.port=6379
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=username
spring.mail.password=emailpassword

